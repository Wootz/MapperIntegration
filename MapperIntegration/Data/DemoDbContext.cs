// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using MapperIntegration.Data.Models;

#nullable disable

namespace MapperIntegration.Data
{
    public partial class DemoDbContext : DbContext
    {
        public DemoDbContext()
        {
        }

        public DemoDbContext(DbContextOptions<DemoDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductImage> ProductImages { get; set; }
        public virtual DbSet<ProductSpec> ProductSpecs { get; set; }
        public virtual DbSet<ShoppingCart> ShoppingCarts { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Scaffolding:ConnectionString", "Data Source=(local);Initial Catalog=MapperIntegration.Database;Integrated Security=true");

            modelBuilder.Entity<Product>(entity =>
            {
                entity.HasKey(e => e.ProductNo);

                entity.ToTable("Product");

                entity.Property(e => e.ProductNo).HasMaxLength(200);

                entity.Property(e => e.Brand).HasMaxLength(200);

                entity.Property(e => e.Category).HasMaxLength(200);

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(450)
                    .HasDefaultValueSql("getdate()");

                entity.Property(e => e.CreatedDate).HasDefaultValueSql("''");

                entity.Property(e => e.Description).HasMaxLength(500);

                entity.Property(e => e.ModifiedBy)
                    .IsRequired()
                    .HasMaxLength(450)
                    .HasDefaultValueSql("getdate()");

                entity.Property(e => e.ModifiedDate).HasDefaultValueSql("''");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasMaxLength(200);
            });

            modelBuilder.Entity<ProductImage>(entity =>
            {
                entity.ToTable("ProductImage");

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(450)
                    .HasDefaultValueSql("getdate()");

                entity.Property(e => e.CreatedDate).HasDefaultValueSql("''");

                entity.Property(e => e.ModifiedBy)
                    .IsRequired()
                    .HasMaxLength(450)
                    .HasDefaultValueSql("getdate()");

                entity.Property(e => e.ModifiedDate).HasDefaultValueSql("''");

                entity.Property(e => e.ProductNo)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Url).HasMaxLength(500);

                entity.HasOne(d => d.ProductNoNavigation)
                    .WithMany(p => p.ProductImages)
                    .HasForeignKey(d => d.ProductNo)
                    .HasConstraintName("FK_ProductImage_Product");
            });

            modelBuilder.Entity<ProductSpec>(entity =>
            {
                entity.ToTable("ProductSpec");

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(450)
                    .HasDefaultValueSql("getdate()");

                entity.Property(e => e.CreatedDate).HasDefaultValueSql("''");

                entity.Property(e => e.DeliveryFee).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Description).HasMaxLength(500);

                entity.Property(e => e.ModifiedBy)
                    .IsRequired()
                    .HasMaxLength(450)
                    .HasDefaultValueSql("getdate()");

                entity.Property(e => e.ModifiedDate).HasDefaultValueSql("''");

                entity.Property(e => e.Price).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.ProductNo)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.Size)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.ProductNoNavigation)
                    .WithMany(p => p.ProductSpecs)
                    .HasForeignKey(d => d.ProductNo)
                    .HasConstraintName("FK_ProductSpec_Product");
            });

            modelBuilder.Entity<ShoppingCart>(entity =>
            {
                entity.ToTable("ShoppingCart");

                entity.Property(e => e.Owner)
                    .IsRequired()
                    .HasMaxLength(450);

                entity.HasOne(d => d.ProductSpec)
                    .WithMany(p => p.ShoppingCarts)
                    .HasForeignKey(d => d.ProductSpecId)
                    .HasConstraintName("FK_ShoppingCart_ProductSpec");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}